// .push
    // 末尾添加元素,返回新的长度
// .pop
    // 删除并返回数组的最后一个元素
// .shift
    // 删除并返回数组的第一个元素
// .unshift
    // 开头添加元素,返回新的长度
// .sort
// .reverse
    // 反转数组中元素的顺序
// .splice
    // 删除 .splice(index) 删除从index起的元素并返回删除的元素
        // a = [1,2,3,4,5,6,7,8,9]
        // let b = a.splice(2) 
            // b=>[3,4,5,6,7,8,9]
            // a=>[1,2]
    // 删除 .splice(index, n) 删除从index起后n个元素并返回删除的元素
    // 替换 .splice(index, n, ...add) 删除从index起后n个元素并返回删除的元素而且在删除位置插入元素add
        // a = [1,2,3,4,5,6,7,8,9]
        // let b = a.splice(2, 2, "add", "add2", "add3") 
            // b=>[3,4]
            // a=>[1, 2, 'add', 5, 6, 7, 8, 9]
    // 添加.splice(index, 0, ...add) 在index插入元素add,返回空数组
// .split
    // 字符串分割
    // 第一个参数 
        // 可以写为空字符串，单字符分割
        // 也可以写正则 eg:/\s/
    // 第二个参数,只取分割后的前n项
// .slice:不改变原数组
    // 从数组中返回选定的元素
    // 第一个参数 开始下标
        // 也可以写负数，末尾开始算起的位置
    // 第二个参数,结束下标
        // 可以不写，默认从开始下标到数组结束
        // 也可以写负数，末尾开始算起的位置
// .fill
    // 用一个固定值填充一个数组中从起始索引到终止索引内的全部元素
    // 当传入两个参数的时候，第一个参数为填充的元素，第二个为填充元素的起始位置(下标)
    // 当传入三个参数的时候，
        // 第一个参数为填充的元素
        // 第二个参数和第三个参数分别指填充元素的起始和终止位置，不修改终止位置元素
    // 如果提供的起始位置或结束位置为负数，则他们会被加上数组的长度来算出最终的位置
        // 例如 起始位置为-1 就相当于array.length-1